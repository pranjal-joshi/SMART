
# For development
smart/dev
-----------------------------------------------------------
# For remote switching
smart/user_name/device_id/
smart/user_name/device_id/state
smart/user_name/device_id/state/D1_to_Dn/0_or_1
smart/user_name/device_id/label/D1_to_Dn/deviceName
-----------------------------------------------------------
# For timer based switching
smart/user_name/device_id/timer/D1_to_Dn/enable_or_disable
smart/user_name/device_id/t_on/D1_to_Dn/time
smart/user_name/device_id/t_off/D1_to_Dn/time
-----------------------------------------------------------
# For sensor integration with node
smart/user_name/device_id/on_motion_start/D1_to_Dn/action
smart/user_name/device_id/on_motion_end/D1_to_Dn/action
smart/user_name/device_id/on_motion_end_timeout/D1_to_Dn/time
-----------------------------------------------------------

# JSON Based protocol

smart/username/smartId/info -> 
{
	'to': 'app/gateway',
	'from': 'node',
	'smartId': 'SMART_123456',
	'type': 'info',
	'deviceType': 'switch/sensor',
	'nodeName': 'MyRoom',
	'NoD':'1/2/4',
}

// App to Node
smart/username/gateway		->	{'from':'app', 'smartId':'smartId', type':'state', data:[1,0,1,0]}
{
	'to': 'gateway',
	'from': 'app',
	'smartId': 'SMART_00C30094',
	'type': 'state',
	'data': [1, 0, 0, 1]
}

// App to Node
smart/username/gateway
{
	'to': 'gateway',
	'from': 'app',
	'smartId': 'SMART_12345',
	'type': 'factory_reset'
}

// App to Node
{
	'to': 'gateway',
	'from': 'app',
	'smartId': 'SMART_12345',
	'type': 'soft_reset'
}
// App to Node
smart/username/gateway
{
	'to': 'gateway',
	'from': 'app',
	'smartId': 'SMART_12345',
	'type': 'state_req'
}

// Node to App
smart/username/smartId/state
{
	'topic': 'smart/username/smartId/state'
	'from': 'node',
	'smartId': 'SMART_00C30094',
	'type': 'state',
	'data': [1, 0, 0, 1]
}

// Node to App - will message
smart/username/smartId/state
{
	'topic': 'smart/username/smartId/status'
	'from': 'node',
	'smartId': 'SMART_00C30094',
	'type': 'status',
	'status': 'online/offline/busy'
}

// Gateway to Mesh
{
	'from': 'gateway',
	'to': 'node'
	'type':'ntp',
	'hour':1,
	'minute': 2,
	'second': 3,
	'weekday': 0-6
}

// Alarm Packet
{
	'smartId': 'SMART_12345',
	'type': 'timer',
	'NoD': 1/2/4,
	'data' : {
			'time': [[[on_h,m,s],[off_h,m,s]],[[on_h,m,s],[off_h,m,s]],[[on_h,m,s],[off_h,m,s]],[[on_h,m,s],[off_h,m,s]]]
			'weekday': [[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6]],
			'status': ['enable','disable','enable',disable']
	}
}
example:
{
	'smartId': 'SMART_12345',
	'type': 'timer',
	'NoD': 4,
	'data' : {
			'time': [[[1,2,3],[1,2,3]],[[1,2,3],[1,2,3]],[[1,2,3],[1,2,3]],[[1,2,3],[1,2,3]]],
			'weekday': [[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6]],
			'status': ['enable','disable','enable','disable']
	}
}

//Sync NodeId with SmartID - MESH ONLY
{
	'nodeId': mesh.getNodeId(),
	'smartId': 'SMART_12345',
	'type': 'vector_link'
}

Sensor Packet:
smart/username/smartId/sensor/values
{
	'topic': 'smart/username/smartId/sensor/values',
	'smartId': 'SMART_12345',
	'deviceType': 'sensor',
	'type': 'bcast',
	'motion': 1/0
}
example:
{
	'topic': 'smart/MyUser/SMART_12345/sensor/values',
	'smartId': 'SMART_12345',
	'deviceType': 'sensor',
	'type': 'bcast',
	'motion': 1
}

Sensor linking
smart/username/smartId/link/1-2-3-4
{
	'smartId': 'SMART_00DCCBB8',
	'type': 'link',
	'no': 1/2/3/4,		// device_no
	'data' : {
		'from': 'SENSOR_ID',
		'state': 1/0 (enable/disable),
		'timeout': minutes,
		'eh': Hr,
		'em': min,
		'dh': Hr,
		'dm': min,
	}
}
example:
{
	'smartId': 'SMART_00DCCBB8',
	'type': 'link',
	'no': 1,
	'data' : {
		'state': 'enable',
		'motion': 1,
		'timeout': 1,
		'eh': 18,
		'em': 30,
		'dh': 6,
		'dm': 30
	}
}

# to boot that node into OTA
smart/username/gateway
{
	'to': 'gateway',
	'from': 'app',
	'smartId': 'SMART_00DCCA33',
	'type': 'ota',
	'state': 'enable/disable'
}

smart/username/gateway					->	{'from':'app', 'to':'smartId', type':'label', data:[a,b,c,d]}